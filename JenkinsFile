pipeline {
    agent any

    environment {
        PM2_HOME = "${WORKSPACE}\\.pm2"
    }

    stages {
        stage('Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Install dependencies') {
            steps {
                bat 'npm ci'
                // Ensure PM2 is installed locally
                bat 'npm install pm2 --no-save'
            }
        }

        stage('Run Tests') {
            steps {
                bat 'npm test -- --watchAll=false --passWithNoTests'
            }
        }

        stage('Build') {
            steps {
                bat 'npm run build'
            }
        }

        stage('Deploy with PM2') {
            steps {
                script {
                    // Ensure PM2_HOME exists
                    bat "if not exist %PM2_HOME% mkdir %PM2_HOME%"

                    // Stop old process if exists
                    bat 'npx pm2 delete react-app || exit 0'

                    // Install serve locally in workspace
                    bat 'npm install serve --no-save'

                    // Start React app via PM2, accessible externally
                    bat 'npx pm2 start npx --name react-app -- serve -s build -l 3000 -H 0.0.0.0'

                    // Save PM2 process list
                    bat 'npx pm2 save'

                    // Create startup batch file
                    bat '''
                    echo @echo off > "%WORKSPACE%\\pm2-startup.bat"
                    echo set PM2_HOME=%PM2_HOME% >> "%WORKSPACE%\\pm2-startup.bat"
                    echo npx pm2 resurrect >> "%WORKSPACE%\\pm2-startup.bat"
                    '''

                    // Register Windows Task Scheduler for auto-start
                    bat """
                    powershell -Command "\$action = New-ScheduledTaskAction -Execute '${env.WORKSPACE}\\\\pm2-startup.bat'; \
                    \$trigger = New-ScheduledTaskTrigger -AtStartup; \
                    \$principal = New-ScheduledTaskPrincipal -UserId 'SYSTEM' -RunLevel Highest; \
                    Register-ScheduledTask -TaskName 'ReactAppPM2' -Action \$action -Trigger \$trigger -Principal \$principal -Force"
                    """
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished. Check PM2 to ensure the app is running.'
        }
        failure {
            echo '❌ Pipeline failed. Check the console logs.'
        }
        success {
            echo '✅ Pipeline succeeded. React app is running via PM2.'
        }
    }
}
