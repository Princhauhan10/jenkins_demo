pipeline {
    agent any

    environment {
        // PM2_HOME will be created dynamically in the workspace
        PM2_HOME = "${env.WORKSPACE}\\.pm2"
        PATH = "${env.WORKSPACE}\\node_modules\\.bin;${env.PATH}"
    }

    stages {
        stage('Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Install dependencies') {
            steps {
                bat 'npm ci'
                // Install PM2 locally in the workspace if not installed
                bat 'npm install pm2 --no-save'
            }
        }

        stage('Tests') {
            steps {
                bat 'npm test -- --watchAll=false --passWithNoTests'
            }
        }

        stage('Build') {
            steps {
                bat 'npm run build'
            }
        }

        stage('Deploy with PM2') {
            steps {
                script {
                    // Ensure PM2_HOME exists
                    bat "if not exist %PM2_HOME% mkdir %PM2_HOME%"

                    // Stop old process (ignore errors)
                    bat 'npx pm2 delete react-app || exit 0'

                    // Start React app accessible externally
                    bat 'npx pm2 start serve --name react-app -- -s build -l 3000 -H 0.0.0.0'

                    // Save process list
                    bat 'npx pm2 save'

                    // Create a startup script for Windows using a batch file in the workspace
                    bat '''
                    echo @echo off > "%WORKSPACE%\\pm2-startup.bat"
                    echo set PM2_HOME=%PM2_HOME% >> "%WORKSPACE%\\pm2-startup.bat"
                    echo npx pm2 resurrect >> "%WORKSPACE%\\pm2-startup.bat"
                    '''

                    // Register Task Scheduler to run this batch at startup
                    bat """
                    powershell -Command "\$action = New-ScheduledTaskAction -Execute '${env.WORKSPACE}\\\\pm2-startup.bat'; \
                    \$trigger = New-ScheduledTaskTrigger -AtStartup; \
                    \$principal = New-ScheduledTaskPrincipal -UserId 'SYSTEM' -RunLevel Highest; \
                    Register-ScheduledTask -TaskName 'ReactAppPM2' -Action \$action -Trigger \$trigger -Principal \$principal -Force"
                    """
                }
            }
        }
    }

    post {
        success {
            echo "✅ Pipeline succeeded. React app deployed with PM2, reachable externally, and will auto-start after reboot."
        }
        failure {
            echo "❌ Pipeline failed. Check console logs."
        }
    }
}
