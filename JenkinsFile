pipeline {
    agent any

    environment {
        NODE_HOME = "C:\\Program Files\\nodejs"  // Update if Node is installed elsewhere
        PATH = "${env.NODE_HOME};${env.PATH}"
        PM2_HOME = "C:\\pm2_home"                // PM2 will use this folder for logs & processes
    }

    stages {
        stage('Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Install dependencies') {
            steps {
                bat 'npm ci'
            }
        }

        stage('Tests') {
            steps {
                bat 'npm test -- --watchAll=false --passWithNoTests'
            }
        }

        stage('Build') {
            steps {
                bat 'npm run build'
            }
        }

        stage('Deploy with PM2') {
            steps {
                script {
                    // Ensure PM2_HOME exists
                    bat "if not exist %PM2_HOME% mkdir %PM2_HOME%"

                    // Remove old process (ignore errors if not found)
                    bat 'npx pm2 delete react-app || exit 0'

                    // Start new process using PM2_HOME
                    bat 'npx pm2 start serve --name react-app -- -s build -l 3000'

                    // Save the PM2 process list
                    bat 'npx pm2 save'

                    // Register PM2 to run on Windows startup via Task Scheduler
                    bat '''
                    powershell -Command "$action = New-ScheduledTaskAction -Execute 'npx' -Argument 'pm2 resurrect'; \
                    $trigger = New-ScheduledTaskTrigger -AtStartup; \
                    $principal = New-ScheduledTaskPrincipal -UserId 'SYSTEM' -RunLevel Highest; \
                    Register-ScheduledTask -TaskName 'ReactAppPM2' -Action $action -Trigger $trigger -Principal $principal -Force"
                    '''
                }
            }
        }
    }

    post {
        success {
            echo "✅ Pipeline succeeded. App deployed with PM2 and will auto-start on reboot."
        }
        failure {
            echo "❌ Pipeline failed. Check console logs."
        }
    }
}
